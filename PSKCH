I'll help you set up DHCP with DDNS in your virtual machine environment where one machine will run both the DHCP and DNS servers, and the other will be a client that automatically gets its IP address and hostname registered in the DNS zone files whenever it connects to the network.

Here's a complete configuration guide based on the PDF information:

# DHCP and DDNS Configuration Guide for Fedora Server

## 1. Install Required Packages on Server VM

First, install the necessary packages on your DHCP/DNS server:

```bash
sudo dnf install dhcp-server bind bind-utils
```

## 2. Generate DDNS Key for Secure Updates

Create a shared key for secure communication between DHCP and DNS:

```bash
# Generate a key file
dnssec-keygen -a HMAC-SHA256 -b 256 -n HOST ddns-key

# View the key
cat Kddns-key.*.key
```

You'll see output similar to this:
```
ddns-key. IN KEY 512 3 165 mPUoqzBVMvxEcMmL3AzS0QgbcOcq0po2l8Z2NJvkqJA=
```

## 3. Create DNSSEC Key Configuration File

Create a key configuration file that both BIND and DHCP will use:

```bash
sudo nano /etc/named/ddns.key
```

Add the following content (replace the key with your generated key):

```
key "ddns-key" {
    algorithm hmac-sha256;
    secret "mPUoqzBVMvxEcMmL3AzS0QgbcOcq0po2l8Z2NJvkqJA=";
};
```

Set proper permissions:
```bash
sudo chmod 640 /etc/named/ddns.key
sudo chown root:named /etc/named/ddns.key
```

## 4. Configure BIND DNS Server

### Edit the main configuration file:

```bash
sudo nano /etc/named.conf
```

Add the following at the top to include our key:
```
include "/etc/named/ddns.key";
```

Configure the options section:
```
options {
    listen-on port 53 { 127.0.0.1; 192.168.1.1; };  // Replace with your server IP
    listen-on-v6 port 53 { ::1; };
    directory "/var/named";
    dump-file "/var/named/data/cache_dump.db";
    statistics-file "/var/named/data/named_stats.txt";
    memstatistics-file "/var/named/data/named_mem_stats.txt";
    allow-query { localhost; 192.168.1.0/24; };  // Your network
    recursion yes;
    dnssec-enable yes;
    dnssec-validation yes;
};

logging {
    channel default_debug {
        file "data/named.run";
        severity dynamic;
    };
};
```

Configure the forward and reverse zones:
```
zone "est.intra" IN {
    type master;
    file "est.intra.zone";
    allow-update { key "ddns-key"; };  // Allow updates with our key
};

zone "1.168.192.in-addr.arpa" IN {
    type master;
    file "1.168.192.in-addr.arpa.zone";
    allow-update { key "ddns-key"; };  // Allow updates with our key
};
```

### Create the forward zone file:

```bash
sudo nano /var/named/est.intra.zone
```

Add the following content:
```
$TTL 86400
@ IN SOA ns1.est.intra. admin.est.intra. (
    2023032001  ; Serial
    3600        ; Refresh
    1800        ; Retry
    604800      ; Expire
    86400 )     ; Minimum TTL

@       IN NS   ns1.est.intra.
ns1     IN A    192.168.1.1  ; Your server IP
```

### Create the reverse zone file:

```bash
sudo nano /var/named/1.168.192.in-addr.arpa.zone
```

Add the following content:
```
$TTL 86400
@ IN SOA ns1.est.intra. admin.est.intra. (
    2023032001  ; Serial
    3600        ; Refresh
    1800        ; Retry
    604800      ; Expire
    86400 )     ; Minimum TTL

@       IN NS   ns1.est.intra.
1       IN PTR  ns1.est.intra.  ; Your server IP's last octet
```

### Set permissions:

```bash
sudo chown named:named /var/named/est.intra.zone
sudo chown named:named /var/named/1.168.192.in-addr.arpa.zone
```

## 5. Configure DHCP Server with DDNS

### Edit the DHCP configuration file:

```bash
sudo nano /etc/dhcp/dhcpd.conf
```

Add the following configuration:

```
# Include the DDNS key
include "/etc/named/ddns.key";

# DDNS Settings
ddns-updates on;
ddns-update-style interim;
update-static-leases on;
use-host-decl-names on;

# Define how DHCP should communicate with DNS
ddns-rev-domainname "in-addr.arpa.";

# Set the DDNS zone and key
zone est.intra. {
    primary 127.0.0.1;
    key ddns-key;
}

zone 1.168.192.in-addr.arpa. {
    primary 127.0.0.1;
    key ddns-key;
}

# Basic DHCP settings
default-lease-time 3600;
max-lease-time 86400;

# Define our subnet
subnet 192.168.1.0 netmask 255.255.255.0 {
    range 192.168.1.100 192.168.1.200;
    option routers 192.168.1.1;
    option domain-name "est.intra";
    option domain-name-servers 192.168.1.1;
    option broadcast-address 192.168.1.255;
    ddns-domainname "est.intra.";
}
```

## 6. Start and Enable the Services

Start the DNS server and enable it to run at boot:

```bash
sudo systemctl enable --now named
```

Check the DNS service status:

```bash
sudo systemctl status named
```

Start the DHCP server and enable it to run at boot:

```bash
sudo systemctl enable --now dhcpd
```

Check the DHCP service status:

```bash
sudo systemctl status dhcpd
```

## 7. Configure Firewall

Allow DNS and DHCP through the firewall:

```bash
sudo firewall-cmd --permanent --add-service=dns
sudo firewall-cmd --permanent --add-service=dhcp
sudo firewall-cmd --reload
```

## 8. Configure SELinux

If you're using SELinux (enabled by default on Fedora), allow DHCP to update DNS:

```bash
sudo setsebool -P named_write_master_zones 1
sudo setsebool -P dhcpd_read_db 1
```

## 9. Testing Your Configuration

On your client machine, configure the network interface to use DHCP:

```bash
sudo nmcli con mod eth0 ipv4.method auto
sudo nmcli con down eth0 && sudo nmcli con up eth0
```

Verify that your client received an IP address:

```bash
ip addr show eth0
```

Check if the hostname was registered in DNS:

```bash
host $(hostname)
```

Or use nslookup or dig:

```bash
nslookup $(hostname)
dig $(hostname)
```

## Troubleshooting Tips

1. Check DHCP server logs:
```bash
sudo journalctl -u dhcpd
```

2. Check DNS server logs:
```bash
sudo journalctl -u named
```

3. Verify DNS zone updates:
```bash
sudo rndc dumpdb -zones
cat /var/named/data/named_dump.db
```

4. Manually test DNS updates:
```bash
nsupdate -k /path/to/Kddns-key.*.private
> server 127.0.0.1
> zone est.intra
> update add test.est.intra 86400 A 192.168.1.123
> send
> quit
```

5. Clear DNS cache if needed:
```bash
sudo rndc flush
```

This configuration will ensure that whenever a client connects to your network, it will automatically receive an IP address from the DHCP server, and its hostname and IP address will be registered in the DNS zone files, allowing other machines on the network to resolve its hostname.
