I'll modify the configuration to use the domain name `est.intra` with `dns.est.intra` as the DNS server and ensure clients are registered as `client.est.intra`. Here's the updated configuration:

# Configuring DHCP with DDNS on Fedora Server

## Step 1: Install Required Packages on the Server

```bash
sudo dnf install bind bind-utils dhcp-server
```

## Step 2: Configure BIND DNS Server

### Edit the main BIND configuration file

```bash
sudo nano /etc/named.conf
```

Add the following configuration:

```
options {
    listen-on port 53 { 127.0.0.1; 192.168.1.1; };  // Change 192.168.1.1 to your server's IP
    listen-on-v6 port 53 { ::1; };
    directory "/var/named";
    dump-file "/var/named/data/cache_dump.db";
    statistics-file "/var/named/data/named_stats.txt";
    memstatistics-file "/var/named/data/named_mem_stats.txt";
    allow-query { localhost; 192.168.1.0/24; };  // Adjust to your network
    recursion yes;
    
    // DDNS configuration
    allow-new-zones yes;
};

// Define the DDNS key for secure updates
key "ddns-key" {
    algorithm hmac-sha256;
    secret "YourStaticSecretKey123456789";  // Simple static key for prototype
};

// Configure logging
logging {
    channel default_debug {
        file "data/named.run";
        severity dynamic;
    };
};

// Forward zone configuration
zone "est.intra" IN {
    type master;
    file "est.intra.zone";
    allow-update { key "ddns-key"; };  // Allow updates using the key
};

// Reverse zone configuration
zone "1.168.192.in-addr.arpa" IN {
    type master;
    file "1.168.192.in-addr.arpa.zone";
    allow-update { key "ddns-key"; };  // Allow updates using the key
};
```

### Create the forward zone file

```bash
sudo nano /var/named/est.intra.zone
```

Add the following content:

```
$TTL 86400
@       IN      SOA     dns.est.intra. admin.est.intra. (
                        2023032901      ; Serial
                        3600            ; Refresh (1 hour)
                        1800            ; Retry (30 minutes)
                        604800          ; Expire (1 week)
                        86400 )         ; Minimum TTL (1 day)
;
@       IN      NS      dns.est.intra.
dns     IN      A       192.168.1.1     ; Your server IP
```

### Create the reverse zone file

```bash
sudo nano /var/named/1.168.192.in-addr.arpa.zone
```

Add the following content:

```
$TTL 86400
@       IN      SOA     dns.est.intra. admin.est.intra. (
                        2023032901      ; Serial
                        3600            ; Refresh (1 hour)
                        1800            ; Retry (30 minutes)
                        604800          ; Expire (1 week)
                        86400 )         ; Minimum TTL (1 day)
;
@       IN      NS      dns.est.intra.
1       IN      PTR     dns.est.intra.  ; Your server IP's last octet
```

### Set correct permissions for the zone files

```bash
sudo chown named:named /var/named/est.intra.zone
sudo chown named:named /var/named/1.168.192.in-addr.arpa.zone
```

## Step 3: Configure DHCP Server with DDNS

### Edit the DHCP configuration file

```bash
sudo nano /etc/dhcp/dhcpd.conf
```

Add the following configuration:

```
# DHCP with DDNS Configuration

# Global parameters
authoritative;
log-facility local7;

# Define the DDNS key (must match the key in named.conf)
key "ddns-key" {
    algorithm hmac-sha256;
    secret "YourStaticSecretKey123456789";  # Use the same key as in named.conf
};

# DDNS configuration
ddns-updates on;
ddns-update-style interim;
update-static-leases on;
ddns-domainname "est.intra.";
ddns-rev-domainname "in-addr.arpa.";

# Ignore client update requests - DHCP server will handle all updates
ignore client-updates;

# Overwrite client hostname with DHCP hostname option if present
use-host-decl-names on;

# DDNS zones configuration
zone est.intra. {
    key "ddns-key";
    primary 192.168.1.1;  # Your DNS server IP
}

zone 1.168.192.in-addr.arpa. {
    key "ddns-key";
    primary 192.168.1.1;  # Your DNS server IP
}

# DHCP subnet configuration
subnet 192.168.1.0 netmask 255.255.255.0 {
    range 192.168.1.100 192.168.1.200;
    option routers 192.168.1.1;
    option domain-name-servers 192.168.1.1;
    option domain-name "est.intra";
    default-lease-time 3600;
    max-lease-time 7200;
    
    # Enable client domain name updates
    ddns-hostname = concat("client-", binary-to-ascii(10, 8, "-", leased-address));
    ddns-domain-name "est.intra";
}

# You can also add static host declarations for specific clients
# Example:
# host specific-client {
#     hardware ethernet 00:11:22:33:44:55;
#     fixed-address 192.168.1.50;
#     option host-name "client1";
# }
```

## Step 4: Configure SELinux and Firewall Settings

### Configure SELinux to allow DDNS updates

```bash
# Set SELinux to permissive mode for testing
sudo setenforce 0

# For permanent changes, edit the SELinux config file
sudo nano /etc/selinux/config
# Change SELINUX=enforcing to SELINUX=permissive
```

### Configure firewall to allow DNS and DHCP

```bash
sudo firewall-cmd --permanent --add-service=dhcp
sudo firewall-cmd --permanent --add-service=dns
sudo firewall-cmd --reload
```

## Step 5: Start and Enable the Services

```bash
# Start and enable the DNS service
sudo systemctl enable named
sudo systemctl start named

# Start and enable the DHCP service
sudo systemctl enable dhcpd
sudo systemctl start dhcpd
```

## Step 6: Check configuration files for syntax errors

```bash
# Check the BIND configuration
sudo named-checkconf /etc/named.conf

# Check the zone files
sudo named-checkzone est.intra /var/named/est.intra.zone
sudo named-checkzone 1.168.192.in-addr.arpa /var/named/1.168.192.in-addr.arpa.zone

# Check the DHCP configuration
sudo dhcpd -t -cf /etc/dhcp/dhcpd.conf
```

## Step 7: Verify DDNS is working

When a client connects, it should automatically get an IP address and its hostname should be added to the DNS zone files. You can verify this by:

1. On the client, request an IP address:
```bash
sudo dhclient -v
```

2. On the server, check if the client was added to DNS:
```bash
dig @192.168.1.1 client-192-168-1-100.est.intra
```

3. Check the DHCP leases file:
```bash
cat /var/lib/dhcpd/dhcpd.leases
```

4. Check for DNS updates in the BIND logs:
```bash
sudo journalctl -u named | grep update
```

## Additional Notes

1. The configuration automatically generates client hostnames in the format `client-IP-ADDRESS.est.intra` (e.g., `client-192-168-1-100.est.intra`).

2. If you want clients to use their own hostnames, modify the DHCP configuration to:
```
ddns-hostname = option host-name;
```

3. For troubleshooting, check the log files:
```bash
sudo journalctl -u named
sudo journalctl -u dhcpd
```

This configuration will ensure that whenever a client connects to your network, it will automatically get an IP address via DHCP and its hostname and IP will be registered in the DNS zone files, allowing other machines to resolve its name.
